---
- hosts: ubuntu
  user: "{{ ansible_user }}"
  become: yes

  tasks:
   - name: Actualizar paquetes
     ansible.builtin.apt:
       upgrade: dist
       update_cache: yes
     register: apt_upgrade
     notify: Reinicio server

   - name: Deshabilitar login de root
     ansible.builtin.lineinfile:
       path: /etc/ssh/sshd_config
       regexp: "{{ item.buscar }}"
       line: "{{ item.reemplazar }}"
     loop:
       - { buscar: '#PermitRootLogin ', reemplazar: 'PermitRootLogin no' }
       - { buscar: '#AuthenticationMethods ', reemplazar: 'Authenticationmethods publickey' }
       - { buscar: '#PubkeyAuthentication ', reemplazar: 'PubkeyAuthentication yes' }
     notify: Reiniciar ssh

   - name: Permitir SSH en UFW
     ansible.builtin.include_tasks:
       file: ./tasks/ufw.yml
     loop:
       - ssh

   - name: UFW habilitado y bloqueando trafico
     community.general.ufw:
       state: enabled
       default: deny
       direction: incoming
     when: ansible_facts['os_family'] == "Debian"

   - name: Instalar Fail2Ban
     ansible.builtin.apt:
       name: fail2ban
       state: latest

   - name: Habilitar y arrancar Fail2Ban
     ansible.builtin.service:
       name: fail2ban
       state: started
       enabled: yes

   - name: Configurar Fail2ban
     ansible.builtin.lineinfile:
       path: /etc/fail2ban/jail.local
       create: yes
       line: " {{ item }} "
     loop:
       - "[sshd]"
       - "enabled = true"
       - "port = ssh"
       - "logpath = /var/log/auth.log"
       - "maxretry = 3"
       - "bantime = 600"
     notify: Reiniciar Fail2Ban

  handlers:
   - name: Reiniciar ssh
     ansible.builtin.service:
       name: "{{ ssh_service }}"
       state: restarted

   - name: Reinicio server
     ansible.builtin.reboot:
     when: apt_upgrade is changed

   - name: Reiniciar Fail2Ban
     ansible.builtin.service:
       name: fail2ban
       state: restarted

...
